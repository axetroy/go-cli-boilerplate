name: ci

on: [push, pull_request]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        go: ["^1.17.0"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    name: Go ${{ matrix.go }} in ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42.1
          args: --timeout=5m30s
          skip-go-installation: true

      - name: Format
        run: make format-check

      - name: Test
        run: |
          make test
          go mod tidy
          git checkout ./
          git clean -df

      - name: Build
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --skip-publish

  release:
    name: Release to Github
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/go-cli-boilerplate'
    needs: [ci]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["^1.17.0"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - uses: axetroy/setup-whatchanged@v1
        with:
          version: v0.4.1

      - name: Generate release.md
        run: |
          whatchanged --output=release.md
          cat release.md

      - name: Release to Github
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --skip-validate --rm-dist --release-notes=./release.md
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
